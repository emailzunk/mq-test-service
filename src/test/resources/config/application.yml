# common properties
# Use to properties below for local testing of the service.
server:
  servlet:
    contextPath: /mq-test-service/v1.0
  port: 9080

info:
  app:
    name: mq-test-service
    version: v1.0
    description: mq-test-service

context-root: /mq-test-service/blue

spring:
  profiles:
    default: development, resilience
    active: development, resilience

kafka-topic-config:
  mapKafkaTopic:
    AUTOMATED_ACTION: FRAUD_EVENTS_AUTOMATED_ACTION
    DEFERRED_SCORE_RESPONSE: FRAUD_DEFERRED_SCORE_RESPONSE
    EVENT_STATUS_UPDATE: FRAUD_EVENTS_STATUS_UPDATE
    USER_INVOKED_ACTION: FRAUD_USER_INVOKE_ACTION

kafka:
  bootstrapServer: ${spring.embedded.kafka.brokers:localhost:9092}
  securityProtocol: PLAINTEXT
  kerberosService: kafka
  lingerInMilliseconds: 10
  acks: all
  retries: 3
  requestTimeout: 10000
  bufferMemory: 200000
  compressionType: none
  batchSize: 16384
  truststore:
    protocol: TLSv1.2
    location: OUTBOUND_TLS_TRUSTSTORE
    password: OUTBOUND_TLS_TRUSTSTORE_PASSWORD
    trustStoreKey: 9XnlcL6ix5QujWXHLVmwbi5
    trustStorePassword: uoi3zK5erbyimitp9bgnAw==
  kerberos:
    kinit: /usr/bin/kinit
  consumer:
    deliveryTimeoutMs: 31000

environmentIEP: LOCAL

resilience-config:
  registerHealthIndicator: true
  slidingWindowType: TIME_BASED
  slidingWindowSize: 60
  minimumNumberOfCalls: 10
  failureRateThreshold: 60
  slowCallDurationThreshold: 4000
  slowCallRateThreshold: 50
  waitDurationInOpenState: 5
  permittedNumberOfCallsInHalfOpenState: 1
  automaticTransitionFromOpenToHalfOpenEnabled: true
  eventConsumerBufferSize: 10
  cancelRunningFuture: true
  timeoutDuration: 6000
  maxThreadPoolSize: 10
  coreThreadPoolSize: 5
  queueCapacity: 10
  keepAliveDuration: 1000

jks:
  keyStoreSecret: Y0BwcHVjMW4w
  trustStoreSecret: YXBwc2lnbg==
